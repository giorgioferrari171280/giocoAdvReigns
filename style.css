:root {
  /* Palette Cromatica Funzionale */
  --colore-primario-grigio-berlino: #4A4A4A;
  --colore-secondario-verde-stasi: #2D4034;
  --colore-accento-rosso-segnale: #A52A2A;
  --colore-neutro-bianco-carta-invecchiata: #F5F5DC;
  --colore-neutro-nero-fumo: #1C1C1C;
  --colore-neutro-grigio-chiaro-muro: #CCCCCC;

  /* Sistema di Spacing Coerente */
  --spacing-xs: 8px;
  --spacing-s: 16px;
  --spacing-m: 24px;
  --spacing-l: 32px;
  --spacing-xl: 48px;
  --spacing-xxl: 64px;

  /* Typography Tematica */
  --font-family-serif: 'PT Serif', 'Merriweather', serif;
  --font-family-sans-serif: 'IBM Plex Sans', 'Roboto', sans-serif;

  /* Dimensioni Font (Scala Modulare) */
  --font-size-titolo-principale: 2rem;    /* 32px se base 16px */
  --font-size-sottotitolo: 1.5rem;       /* 24px se base 16px */
  --font-size-corpo-testo: 1rem;         /* 16px se base 16px */
  --font-size-didascalia: 0.875rem;    /* 14px se base 16px */

  /* Line Height */
  --line-height-corpo-testo: 1.6;
  --line-height-didascalia: 1.4;

  /* Font Weight */
  --font-weight-bold: 700;
  --font-weight-semi-bold: 600;
  --font-weight-normal: 400; /* Aggiunto per coerenza */

  /* Letter Spacing */
  --letter-spacing-titolo: -0.02em;

  /* Border Radius */
  --border-radius-small: 2px;
  --border-radius-medium: 4px;

  /* Transition Durations */
  --transition-duration-short: 0.2s;
  --transition-duration-medium: 0.5s;

  /* Shadow */
  --box-shadow-soft: 0px 2px 4px rgba(0, 0, 0, 0.2);
}

/* Stili di Base */
body {
  font-family: var(--font-family-sans-serif);
  font-size: var(--font-size-corpo-testo);
  line-height: var(--line-height-corpo-testo);
  color: var(--colore-neutro-bianco-carta-invecchiata);
  background-color: var(--colore-primario-grigio-berlino);
  margin: 0;
  padding: var(--spacing-l); /* Padding generale per il corpo */
}

h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-family-serif);
  color: var(--colore-neutro-bianco-carta-invecchiata);
  margin-top: var(--spacing-l);
  margin-bottom: var(--spacing-s);
}

h1 {
  font-size: var(--font-size-titolo-principale);
  font-weight: var(--font-weight-bold);
  letter-spacing: var(--letter-spacing-titolo);
}

h2 {
  font-size: var(--font-size-sottotitolo);
  font-weight: var(--font-weight-semi-bold);
}

p {
  margin-bottom: var(--spacing-s);
}

a {
  color: var(--colore-accento-rosso-segnale);
  text-decoration: none; /* Rimuove la sottolineatura di default */
}

a:hover {
  text-decoration: underline; /* Aggiunge sottolineatura all'hover per chiarezza */
}

button {
  font-family: var(--font-family-serif); /* Titoli e UI principali */
  font-size: var(--font-size-corpo-testo); /* O una dimensione specifica se necessario */
  font-weight: var(--font-weight-semi-bold);
  color: var(--colore-neutro-bianco-carta-invecchiata);
  background-color: var(--colore-secondario-verde-stasi);
  border: 1px solid var(--colore-neutro-grigio-chiaro-muro);
  padding: var(--spacing-s) var(--spacing-m);
  cursor: pointer;
  border-radius: var(--border-radius-small);
  transition: background-color var(--transition-duration-short) ease-in-out,
              border-color var(--transition-duration-short) ease-in-out, /* Aggiunto per hover */
              transform var(--transition-duration-short) ease-in-out,
              box-shadow var(--transition-duration-short) ease-in-out;
}

/* Micro-interazioni per Pulsanti */
button:hover {
  background-color: var(--colore-primario-grigio-berlino); /* Leggero cambiamento di sfondo */
  border-color: var(--colore-secondario-verde-stasi); /* Bordo sottile Verde Stasi */
}

button:focus {
  outline: 2px solid var(--colore-accento-rosso-segnale);
  outline-offset: 0; /* Outline appare senza offset */
}

button:active {
  transform: scale(0.98); /* Simula pressione fisica */
  box-shadow: inset 0px 2px 4px rgba(0, 0, 0, 0.3); /* Ombra interna */
  background-color: var(--colore-secondario-verde-stasi); /* Mantiene colore o leggermente più scuro */
}

button:disabled,
button.disabled { /* Aggiunta classe per disabilitazione programmatica */
  opacity: 0.5;
  background-color: var(--colore-neutro-grigio-chiaro-muro); /* Colore più neutro e desaturato */
  border-color: var(--colore-neutro-grigio-chiaro-muro);
  color: var(--colore-primario-grigio-berlino); /* Testo più scuro su sfondo chiaro */
  cursor: not-allowed;
  transform: none; /* Rimuove effetti di transform */
  box-shadow: none; /* Rimuove effetti di shadow */
}


/* Stili per elementi di input generici */
input[type="text"],
input[type="password"],
input[type="email"],
textarea {
  font-family: var(--font-family-sans-serif);
  font-size: var(--font-size-corpo-testo);
  padding: var(--spacing-s);
  background-color: var(--colore-primario-grigio-berlino);
  color: var(--colore-neutro-bianco-carta-invecchiata);
  border: 1px solid var(--colore-neutro-grigio-chiaro-muro);
  border-radius: var(--border-radius-small);
  box-sizing: border-box; /* Per includere padding e border nella larghezza/altezza totale */
}

input[type="text"]:focus,
input[type="password"]:focus,
input[type="email"]:focus,
textarea:focus {
  outline: 2px solid var(--colore-accento-rosso-segnale);
  outline-offset: 0;
  border-color: var(--colore-accento-rosso-segnale); /* Opzionale, per rafforzare il focus */
}

/* Stili per elementi contenitori generici */
.container {
  width: 100%;
  max-width: 1200px; /* Esempio di larghezza massima per contenitori principali */
  margin-left: auto;
  margin-right: auto;
  padding: var(--spacing-l);
  box-sizing: border-box;
}

.panel {
  background-color: var(--colore-primario-grigio-berlino);
  border: 1px solid var(--colore-neutro-grigio-chiaro-muro);
  padding: var(--spacing-m);
  margin-bottom: var(--spacing-l);
  box-shadow: var(--box-shadow-soft);
}

/* Componenti Specifici */

/* Cornici */
.frame {
  border: 2px solid var(--colore-secondario-verde-stasi);
  padding: var(--spacing-s);
  background-color: transparent; /* O un colore di sfondo leggermente diverso se necessario */
}

/* Gruppi di Pulsanti */
.button-group {
  display: flex;
  gap: var(--spacing-m); /* Spazio tra i pulsanti nel gruppo */
}

.button-group button {
  margin: 0; /* Rimuove il margine individuale se gestito da gap */
}

/* Pulsante di Accento (Call to Action Critiche) */
button.accent, .button-accent {
  background-color: var(--colore-accento-rosso-segnale);
  color: var(--colore-neutro-bianco-carta-invecchiata);
  border-color: var(--colore-accento-rosso-segnale);
}

button.accent:hover, .button-accent:hover {
  background-color: #c0392b; /* Un rosso leggermente più scuro per l'hover */
  border-color: #c0392b;
}

/* Barre di Separazione */
hr.separator {
  border: none;
  height: 1px;
  background-color: var(--colore-neutro-grigio-chiaro-muro);
  margin-top: var(--spacing-l);
  margin-bottom: var(--spacing-l);
}

/* Elementi UI per Gerarchia Visiva */
.visual-hierarchy-element {
  background-color: var(--colore-secondario-verde-stasi);
  color: var(--colore-neutro-bianco-carta-invecchiata);
  padding: var(--spacing-s);
  border-left: 4px solid var(--colore-accento-rosso-segnale); /* Esempio di indicatore */
}

/* Alert Box */
.alert {
  padding: var(--spacing-s);
  margin-bottom: var(--spacing-m);
  border: 1px solid transparent;
  border-radius: var(--border-radius-small);
  font-family: var(--font-family-sans-serif);
}

.alert-info {
  color: var(--colore-neutro-bianco-carta-invecchiata);
  background-color: var(--colore-secondario-verde-stasi);
  border-color: var(--colore-neutro-grigio-chiaro-muro);
}

.alert-critical {
  color: var(--colore-neutro-bianco-carta-invecchiata);
  background-color: var(--colore-accento-rosso-segnale);
  border-color: #8B0000; /* Rosso più scuro per il bordo */
}

/* Indicatori di Stato Attivi (es. per tab o step) */
.status-indicator-active {
  border-bottom: 3px solid var(--colore-accento-rosso-segnale);
  padding-bottom: var(--spacing-xs);
  font-weight: var(--font-weight-semi-bold);
}

/* Animazioni */

/* Barra di Caricamento */
.loading-bar-container {
  width: 100%;
  height: 20px; /* Altezza della barra di caricamento */
  background-color: var(--colore-neutro-grigio-chiaro-muro);
  border: 1px solid var(--colore-primario-grigio-berlino);
  overflow: hidden; /* Nasconde l'eccesso della barra interna */
}

.loading-bar-progress {
  height: 100%;
  width: 0%; /* Inizia da 0 */
  background-color: var(--colore-secondario-verde-stasi);
  animation: fillProgressBar 5s linear forwards; /* 'forwards' mantiene lo stato finale */
}

@keyframes fillProgressBar {
  from {
    width: 0%;
  }
  to {
    width: 100%;
  }
}

/* Transizioni di Schermata (Fade) */
.screen-transition-fade-out {
  animation: fadeOutScreen var(--transition-duration-medium) ease-in-out forwards;
}

.screen-transition-fade-in {
  animation: fadeInScreen var(--transition-duration-medium) ease-in-out forwards;
}

@keyframes fadeOutScreen {
  from { opacity: 1; }
  to { opacity: 0; visibility: hidden; } /* visibility: hidden per nascondere dopo l'animazione */
}

@keyframes fadeInScreen {
  from { opacity: 0; visibility: visible; } /* visibility: visible per mostrare all'inizio */
  to { opacity: 1; }
}

/* Transizioni di Schermata (Slide) - Esempio Slide In da Destra */
.screen-transition-slide-in {
  animation: slideInScreen var(--transition-duration-medium) ease-out forwards;
}

@keyframes slideInScreen {
  from {
    transform: translateX(100%);
    opacity: 0;
  }
  to {
    transform: translateX(0);
    opacity: 1;
  }
}
.screen-transition-slide-out { /* Esempio Slide Out verso Sinistra */
  animation: slideOutScreen var(--transition-duration-medium) ease-in forwards;
}

@keyframes slideOutScreen {
  from {
    transform: translateX(0);
    opacity: 1;
  }
  to {
    transform: translateX(-100%);
    opacity: 0;
    visibility: hidden;
  }
}


/* Animazione per Achievement/Oggetti Raccolti (Pulse) */
.achievement-icon {
  /* Stili base dell'icona qui */
  display: inline-block; /* Per permettere transform */
}

.achievement-icon.pulse {
  animation: pulseAchievement var(--transition-duration-medium) ease-in-out;
}

@keyframes pulseAchievement {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

/* Animazione per Achievement/Oggetti Raccolti (Fade-in e Scale) */
.collectible-icon-reveal {
  opacity: 0;
  transform: scale(0.8);
  animation: fadeInScaleCollectible 0.3s ease-out forwards;
  animation-delay: 0.1s; /* Leggero ritardo per un effetto più gradevole */
}

@keyframes fadeInScaleCollectible {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1.05); /* Leggermente più grande per enfasi */
  }
}
/* Per riportare a scala 1 dopo l'enfasi, si potrebbe concatenare un'altra animazione
   o gestire via JS, ma per CSS puro, questo è un reveal con enfasi.
   Per un ritorno a 1.0, si potrebbe fare:
   70% { opacity: 1; transform: scale(1.05); }
   100% { opacity: 1; transform: scale(1.0); }
   Ma l'istruzione dice "da 1 a 1.05 e ritorno", quindi il pulse è più indicato.
   Riuso il pulse per generalità, rinominando la classe per chiarezza.
*/

.collectible-pulse {
  animation: pulseCollectible var(--transition-duration-medium) ease-in-out;
}

@keyframes pulseCollectible {
  0% { transform: scale(1); }
  50% { transform: scale(1.05); }
  100% { transform: scale(1); }
}

/* Border Radius and Shadow System */

/*
  Le variabili --border-radius-small (2px) e --border-radius-medium (4px)
  sono definite in :root.
  Gli elementi interattivi come 'button' e 'input' usano --border-radius-small.
  La variabile --box-shadow-soft (0px 2px 4px rgba(0, 0, 0, 0.2)) è definita in :root
  e usata da .panel.
  L'enfasi è su angoli retti per la maggior parte degli elementi.
*/

/* Assicura che gli elementi strutturali principali mantengano angoli retti di default */
div, section, article, aside, header, footer, nav {
  border-radius: 0; /* Default a angoli retti */
}

/* Esempio di ombra interna (già usata in button:active) */
/* .elemento-con-ombra-interna {
  box-shadow: inset 0px 2px 4px rgba(0, 0, 0, 0.15);
} */

/*
  Non sono necessarie ulteriori definizioni globali per border-radius o shadow
  oltre a quanto già implementato e alle variabili in :root,
  dato che il design richiede un uso minimo e specifico.
*/

/* Gradienti e Texture Overlays */

/*
  I gradienti e le texture devono essere usati con molta sottigliezza.
*/

/* Esempio di gradiente sottile per un pannello o pulsante */
.subtle-gradient-panel {
  /* Applica sopra il colore di sfondo esistente */
  background-image: linear-gradient(
    to bottom,
    rgba(255, 255, 255, 0.03), /* Leggermente più chiaro in alto, quasi impercettibile */
    rgba(0, 0, 0, 0.03)       /* Leggermente più scuro in basso, quasi impercettibile */
  );
}

/* Esempio di gradiente verticale usando i colori del tema, come richiesto */
/* Questo potrebbe essere applicato a .panel o .button se si desidera un effetto più marcato ma controllato */
.themed-gradient-vertical {
  background-color: var(--colore-primario-grigio-berlino); /* Fallback e base */
  background-image: linear-gradient(
    to bottom,
    var(--colore-neutro-grigio-chiaro-muro), /* Tonalità più chiara */
    var(--colore-primario-grigio-berlino)    /* Tonalità più scura target */
  );
  /* Il colore del testo potrebbe aver bisogno di aggiustamenti se questo gradiente
     viene applicato a elementi con testo, per mantenere il contrasto.
     Ad esempio, se il gradiente rende lo sfondo complessivamente più chiaro.
     color: var(--colore-neutro-nero-fumo);
  */
}


/* Esempio di texture overlay (da usare con un'immagine di texture) */
/*
.texture-overlay-concrete {
  position: relative; // L'elemento contenitore deve avere position relative o altra
}

.texture-overlay-concrete::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: url('path/to/concrete-texture.png'); // SOSTITUIRE con il percorso reale
  background-repeat: repeat; // O no-repeat, cover, etc. a seconda della texture
  opacity: 0.05; // Opacità molto bassa come da richiesta
  pointer-events: none; // Per non interferire con gli elementi sottostanti
  z-index: 0; // Per stare dietro al contenuto diretto dell'elemento ma sopra il suo sfondo
}
*/

/* Esempio di texture per l'intero sfondo del body (carta invecchiata o cemento) */
/* Per applicare, aggiungere la classe 'textured-background' al tag <body> in HTML
body.textured-background {
  position: relative; // Necessario se ::before è absolute e non fixed
}

body.textured-background::before {
  content: "";
  position: fixed; // Fissa per coprire l'intera viewport e rimanere statica allo scroll
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-image: url('path/to/aged-paper-or-concrete-texture.png'); // SOSTITUIRE
  background-repeat: repeat; // O come necessario
  opacity: 0.03; // Molto sottile, come da richiesta
  pointer-events: none;
  z-index: -1; // Dietro a tutto il contenuto della pagina
}
*/

/*
  Queste sono classi di esempio. L'applicazione specifica e i percorsi delle immagini
  dipenderanno dagli asset disponibili e dagli elementi HTML a cui si desidera
  applicare questi effetti. Il prompt enfatizza un uso molto limitato e sottile.
*/

/* Design Responsivo */

/*
  Utilizza flexbox e grid per layout flessibili (già incoraggiato con .button-group).
  Utilizza rem o em per le dimensioni dei font (già in uso).
  Utilizza max-width per le immagini (non ci sono immagini dirette nel CSS finora,
  ma è una buona pratica per quando verranno aggiunte).

  Le media query seguenti sono esempi e dovrebbero essere adattate
  in base ai breakpoint specifici del design del gioco.
*/

/* Esempio: Schermi più piccoli (es. mobile, fino a 768px) */
@media (max-width: 768px) {
  body {
    padding: var(--spacing-m); /* Riduci il padding del corpo */
    font-size: 0.9rem; /* Leggermente più piccolo per mobile, sovrascrive var(--font-size-corpo-testo) per questo breakpoint */
  }

  h1 {
    font-size: 1.8rem; /* Riduci leggermente la dimensione del titolo principale */
  }

  h2 {
    font-size: 1.3rem; /* Riduci leggermente la dimensione dei sottotitoli */
  }

  .container {
    padding: var(--spacing-m); /* Riduci il padding dei contenitori */
  }

  /* Riorganizza i gruppi di pulsanti in colonna */
  .button-group {
    flex-direction: column;
    gap: var(--spacing-s); /* Riduci il gap per la visualizzazione in colonna */
  }

  .button-group button {
    width: 100%; /* Fai in modo che i pulsanti occupino tutta la larghezza */
    padding: var(--spacing-s); /* Padding leggermente ridotto per mobile */
  }

  /* Adatta la dimensione del testo per didascalie */
  p, li, span, label { /* Target generici per testo più piccolo */
     /* La dimensione del font base del body è già ridotta */
  }
  /* Se si vuole ridefinire --font-size-didascalia specificamente per mobile: */
  /*
  :root {
    --font-size-didascalia: 0.75rem; // Questo non funziona dentro una media query per le variabili root
  }
  */
  /* Alternativa: sovrascrivere direttamente gli elementi che usano quella variabile */
  .didascalia-element { /* Assumendo una classe per le didascalie */
    font-size: 0.75rem; /* o var(--font-size-didascalia) * 0.9 etc. */
  }


  /* Assicura che gli input siano full-width se necessario */
  input[type="text"],
  input[type="password"],
  input[type="email"],
  textarea {
    width: 100%; /* Occupa tutta la larghezza disponibile nel suo contenitore */
    font-size: 0.9rem; /* Coerenza con il corpo del testo */
  }

  .panel {
    padding: var(--spacing-s);
  }
}

/* Esempio: Schermi medi (es. tablet, da 769px a 1024px) */
@media (min-width: 769px) and (max-width: 1024px) {
  body {
    padding: var(--spacing-l); /* Padding standard per tablet */
    font-size: 1rem; /* Ripristina o conferma la dimensione del font base */
  }

  .container {
    max-width: 960px; /* Limita la larghezza del contenitore su tablet */
  }

   h1 {
    font-size: 1.9rem; /* Leggermente più piccolo di desktop ma più grande di mobile */
  }

  h2 {
    font-size: 1.4rem; /* Leggermente più piccolo di desktop ma più grande di mobile */
  }
  /* Ripristina le dimensioni dei font se modificate per mobile e non si usa :root override */
  input[type="text"],
  input[type="password"],
  input[type="email"],
  textarea {
    font-size: 1rem;
  }
}

/* Ulteriori considerazioni per il responsive design:
- Immagini di sfondo:
  Se un elemento specifico (es. body o un pannello) ha un'immagine di sfondo:
  .elemento-con-sfondo {
    background-image: url('path/to/image.jpg');
    background-size: cover; // Assicura che l'immagine di sfondo copra l'area
    background-position: center center; // Centra l'immagine
    background-repeat: no-repeat;
    // background-attachment: fixed; // Mantiene l'immagine fissa durante lo scroll (usare con cautela per performance)
  }

- Layout principali (es. riquadro testuale, pannello pulsanti):
  Devono essere flessibili. Se si usa CSS Grid o Flexbox per il layout generale
  della pagina, le media query possono modificare le proprietà di grid/flex.

  Esempio di un layout di gioco a due colonne:
  .game-interface {
    display: flex;
    flex-direction: row;
    gap: var(--spacing-l);
  }
  .game-main-content {
    flex: 3; // Occupa più spazio
  }
  .game-sidebar {
    flex: 1; // Occupa meno spazio
    background-color: var(--colore-secondario-verde-stasi); // Esempio
    padding: var(--spacing-m);
  }

  @media (max-width: 768px) {
    .game-interface {
      flex-direction: column; // Su mobile, le sezioni vanno una sotto l'altra
    }
    .game-main-content,
    .game-sidebar {
      flex: none; // Rimuovi i fattori di flessibilità per layout a colonna
      width: 100%; // Occupa tutta la larghezza
    }
  }
*/